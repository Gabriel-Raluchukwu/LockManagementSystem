// <auto-generated />
using System;
using LockManagementSystem.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LockManagementSystem.Infrastructure.Migrations
{
    [DbContext(typeof(LockManagementWriteContext))]
    [Migration("20220731164513_AddedRoleAndEmployeeRoleTables")]
    partial class AddedRoleAndEmployeeRoleTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LockManagementSystem.Domain.Entities.EmployeeDetailEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeprecatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EmploymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeprecated")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Nationality")
                        .HasColumnType("text");

                    b.Property<Guid>("OfficeId")
                        .HasColumnType("uuid");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmployeeDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e41b9758-1a38-4c3b-8d7e-74e640f30edd"),
                            Address = "No 12, Palace road",
                            Country = "Nigeria",
                            CreatedAt = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3200),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeprecatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "default.user@clay.com",
                            EmploymentDate = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3210),
                            FirstName = "default",
                            Gender = "Male",
                            IsDeprecated = false,
                            LastName = "user",
                            Nationality = "Nigerian",
                            OfficeId = new Guid("0cad73e3-b734-4234-80ed-c95b95389e47"),
                            PhoneNumber = "23411111111",
                            State = "Lagos"
                        });
                });

            modelBuilder.Entity("LockManagementSystem.Domain.Entities.EmployeeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DeprecatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeprecated")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("LockManagementSystem.Domain.Entities.EmployeeRoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DeprecatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeprecated")
                        .HasColumnType("boolean");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("EmployeeId", "RoleId");

                    b.ToTable("EmployeeRoles");
                });

            modelBuilder.Entity("LockManagementSystem.Domain.Entities.EventLogEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DeprecatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeprecated")
                        .HasColumnType("boolean");

                    b.Property<Guid>("LockId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("OccurredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("OfficeId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.ToTable("EventLogs");
                });

            modelBuilder.Entity("LockManagementSystem.Domain.Entities.LockEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateInstalled")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeprecatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeprecated")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<Guid>("OfficeId")
                        .HasColumnType("uuid");

                    b.Property<string>("SerialNo")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.ToTable("Locks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1af0235f-ad8c-4d3b-beef-3540993722af"),
                            CreatedAt = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3270),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DateInstalled = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3270),
                            DeprecatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeprecated = false,
                            Location = "Main Entrance, Ground floor",
                            Model = "Clay Lock 2.0",
                            OfficeId = new Guid("0cad73e3-b734-4234-80ed-c95b95389e47"),
                            SerialNo = "123454fd",
                            UpdatedAt = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3270),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("fee7d619-35d8-4c0d-8840-03b9afd650cf"),
                            CreatedAt = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3270),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DateInstalled = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3280),
                            DeprecatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeprecated = false,
                            Location = "Storage Entrance, Ground floor",
                            Model = "Clay Lock 2.0",
                            OfficeId = new Guid("0cad73e3-b734-4234-80ed-c95b95389e47"),
                            SerialNo = "40478872",
                            UpdatedAt = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3270),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("LockManagementSystem.Domain.Entities.OfficeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DeprecatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeprecated")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfLocks")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0cad73e3-b734-4234-80ed-c95b95389e47"),
                            Address = "No 20, Johnson avenue",
                            Country = "Nigeria",
                            CreatedAt = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3090),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeprecatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Locks and Security",
                            IsDeprecated = false,
                            Name = "Clay Locks",
                            NumberOfDoors = 24,
                            NumberOfLocks = 12,
                            UpdatedAt = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3100),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("LockManagementSystem.Domain.Entities.RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DeprecatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeprecated")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OfficeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("OfficeId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5de738a-e297-424d-a84a-6eb09766a3ea"),
                            CreatedAt = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeprecatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Administrator role",
                            IsDeprecated = false,
                            Name = "Administrator",
                            OfficeId = new Guid("0cad73e3-b734-4234-80ed-c95b95389e47"),
                            UpdatedAt = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3300),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("b17e919b-a4f9-4d08-b909-3f675edbf31d"),
                            CreatedAt = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeprecatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Employee role",
                            IsDeprecated = false,
                            Name = "Employee",
                            OfficeId = new Guid("0cad73e3-b734-4234-80ed-c95b95389e47"),
                            UpdatedAt = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3300),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("356dea14-79d9-427a-9cd2-779a266bf764"),
                            CreatedAt = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeprecatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Director role",
                            IsDeprecated = false,
                            Name = "Director",
                            OfficeId = new Guid("0cad73e3-b734-4234-80ed-c95b95389e47"),
                            UpdatedAt = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3300),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d7161619-d3b9-436f-953a-26fe25e7f697"),
                            CreatedAt = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3300),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeprecatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Director role",
                            IsDeprecated = false,
                            Name = "OfficeManager",
                            OfficeId = new Guid("0cad73e3-b734-4234-80ed-c95b95389e47"),
                            UpdatedAt = new DateTime(2022, 7, 31, 16, 45, 13, 324, DateTimeKind.Utc).AddTicks(3300),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("LockManagementSystem.Domain.Entities.EmployeeDetailEntity", b =>
                {
                    b.HasOne("LockManagementSystem.Domain.Entities.EmployeeEntity", "Employee")
                        .WithOne("Detail")
                        .HasForeignKey("LockManagementSystem.Domain.Entities.EmployeeDetailEntity", "EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("LockManagementSystem.Domain.Entities.EmployeeRoleEntity", b =>
                {
                    b.HasOne("LockManagementSystem.Domain.Entities.EmployeeEntity", "Employee")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LockManagementSystem.Domain.Entities.RoleEntity", "Role")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("LockManagementSystem.Domain.Entities.LockEntity", b =>
                {
                    b.HasOne("LockManagementSystem.Domain.Entities.OfficeEntity", "Office")
                        .WithMany("Locks")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");
                });

            modelBuilder.Entity("LockManagementSystem.Domain.Entities.RoleEntity", b =>
                {
                    b.HasOne("LockManagementSystem.Domain.Entities.OfficeEntity", "Office")
                        .WithMany("Roles")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");
                });

            modelBuilder.Entity("LockManagementSystem.Domain.Entities.EmployeeEntity", b =>
                {
                    b.Navigation("Detail");

                    b.Navigation("EmployeeRoles");
                });

            modelBuilder.Entity("LockManagementSystem.Domain.Entities.OfficeEntity", b =>
                {
                    b.Navigation("Locks");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("LockManagementSystem.Domain.Entities.RoleEntity", b =>
                {
                    b.Navigation("EmployeeRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
